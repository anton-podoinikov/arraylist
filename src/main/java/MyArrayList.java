
/**
 * Интерфейс MyArrayList представляет собой коллекцию, которая хранит элементы в упорядоченной форме.
 * Элементы могут быть добавлены, удалены, изменены и извлечены по индексу. Коллекция также поддерживает
 * итерацию по всем элементам и базовые операции сортировки.
 *
 * @param <E> тип элементов в этом списке
 */
public interface MyArrayList<E> extends Iterable<E> {

    /**
     * Добавляет указанный элемент в конец этого списка.
     *
     * @param e элемент, который необходимо добавить
     * @return true, если элемент был успешно добавлен
     */
    boolean add(E e);

    /**
     * Вставляет указанный элемент на заданную позицию в этом списке.
     * Элементы, которые следуют за позицией, сдвигаются вправо.
     *
     * @param index индекс, по которому должен быть вставлен элемент
     * @param e элемент для вставки
     */
    void add(int index, E e);

    /**
     * Возвращает элемент, расположенный по указанному индексу в списке.
     *
     * @param index индекс извлекаемого элемента
     * @return элемент по указанному индексу
     */
    E get(int index);

    /**
     * Удаляет элемент по указанному индексу из этого списка.
     * Все последующие элементы сдвигаются влево.
     *
     * @param index индекс удаляемого элемента
     */
    void remove(int index);

    /**
     * Очищает список, удаляя все элементы.
     */
    void clear();

    /**
     * Сортирует этот список согласно естественному порядку элементов.
     */
    void sort();

    /**
     * Возвращает количество элементов в этом списке.
     *
     * @return количество элементов в списке
     */
    int size();

    /**
     * Добавляет все элементы указанного списка в конец этого списка.
     * Элементы добавляются в том порядке, в котором они представлены в указанном списке.
     *
     * @param other список, элементы которого должны быть добавлены в этот список
     */
    void addAll(MyArrayList<E> other);
}
